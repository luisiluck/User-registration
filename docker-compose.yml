services:

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-server:7.2.1
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9997:9997"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9997
      KAFKA_JMX_HOSTNAME: kafka

  kafka-init-topics:
    image: confluentinc/cp-kafka:7.2.1
    depends_on:
      - kafka
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
               cub kafka-ready -b kafka:29092 1 30 && \
               kafka-topics --create --topic user.registered --partitions 1 --replication-factor 1 --if-not-exists --bootstrap-server kafka:29092 && \
               kafka-topics --create --topic user.verified --partitions 1 --replication-factor 1 --if-not-exists --bootstrap-server kafka:29092 && \
               kafka-topics --create --topic verification.requested --partitions 1 --replication-factor 1 --if-not-exists --bootstrap-server kafka:29092 '"

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      DYNAMIC_CONFIG_ENABLED: 'true'
  mongodb:
    image: mongo:6.0
    container_name: db
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db

  mongo-express:
    image: mongo-express:1.0.0-alpha.4
    container_name: audit-mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb

  mailpit:
    image: axllent/mailpit
    container_name: mailpit
    restart: unless-stopped
    volumes:
      - mail-data:/data
    ports:
      - 8025:8025
      - 1025:1025
    environment:
      MP_MAX_MESSAGES: 5000
      MP_DATABASE: /data/mailpit.db
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1
  
  audit:
    image: ghcr.io/luisiluck/user-registration/audit-service:latest
    container_name: audit
    depends_on:
      kafka-init-topics:
        condition: service_completed_successfully
    environment:
      - KAFKA_BROKERS=kafka:29092
      - MONGODB_URI=mongodb://db:27017

  email:
    image: ghcr.io/luisiluck/user-registration/email-service:latest
    container_name: email
    depends_on:
      kafka-init-topics:
        condition: service_completed_successfully
    environment:
      - KAFKA_BROKERS=kafka:29092
      - SMTP_HOST=mailpit  

  user:
    image: ghcr.io/luisiluck/user-registration/user-service:latest
    container_name: user
    ports:
      - "3000:3000"
    depends_on:
      kafka-init-topics:
        condition: service_completed_successfully
    environment:
      - KAFKA_BROKERS=kafka:29092
      - MONGODB_URI=mongodb://db:27017


volumes:
  mongo-data:
  mail-data: